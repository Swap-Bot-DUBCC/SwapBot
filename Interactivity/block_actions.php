<?phprequire '../../etc/Env.php'; // Require the environmental variables fileif ($body['actions'][0]['type'] !== "button") {    return;}/* SEE THE OUTPUT FORMAT * file_put_contents("Output.txt", print_r($body, true));  return; */// First we want to connect to the database,$conn = mysqli_connect($servername, $username, $password, $dbname);if (mysqli_error($conn)) {    die("Connection failed: " . mysqli_error($conn) . ":x::earth_africa:");}$response_url = $body['response_url'];/* Now we have to find out the swap the user wanted to delete; it's easy because the button_id will have both things: crewcode and swap date.However, I am more inclined to use $user_id, since it will be better */$value_array = explode("_", $body['actions'][0]['action_id']);$fecha = $value_array[1];$crewcode = $value_array[2];// Prepare the delete statement, and execute it$stmt_delete = mysqli_prepare($conn, "DELETE FROM Swaps WHERE Day = ? AND UserID = ?");mysqli_stmt_bind_param($stmt_delete, "ss", $fecha, $user_id);mysqli_stmt_execute($stmt_delete);// Now the swap request should have been deleted. We'll update the message to reflect that. But first, we'll run a check to make sureif (mysqli_stmt_affected_rows($stmt_delete) > 0) {    /* chat.update requires $token, $channel, $ts_value. It does NOT work with ephemeral messages. However, I can update the message using the response_url that comes with it and setting      * replace_original to true */    $update_array = [        'text' => 'The swap that you requested on the ' . $fecha . ' has been deleted',        'replace_original' => true,    ];    $update_string = json_encode($update_array);    $slack_update = curl_init($response_url);    curl_setopt($slack_update, CURLOPT_CUSTOMREQUEST, "POST");    curl_setopt($slack_update, CURLOPT_POSTFIELDS, $update_string);    curl_setopt($slack_update, CURLOPT_CRLF, true);    curl_setopt($slack_update, CURLOPT_RETURNTRANSFER, true);    curl_setopt($slack_update, CURLOPT_HTTPHEADER, [        "Content-Type: application/json",        "Authorization: Bearer " . $token,        "Content-Length: " . strlen($update_string)]    );    $result_curl = curl_exec($slack_update); // Store the result, in case there's any errors    curl_close($slack_update);}/* chat.delete requires $token, $channel, $ts_value. However, I can delete the message using the response_url that comes with it and setting  delete_original to true. I don't think I will delete the message for now, since:    * 1. It's only visible to the person who uses the command.     * 2. They will disappear the next time you load the app properly. */?>