<?php$user_agent = "SwapBotRequest/4.1 (https://ryanairdubcabincrew.slack.com; 23.jonathantadeoleiva@gmail.com)";require '../../etc/Env.php'; // Require the environmental variables file// First verify that the request comes from Slack by using the signing secret hash$headers = getallheaders();$raw_body = file_get_contents('php://input');$body = json_decode($raw_body, true);$x_slack_signature = $headers["X-Slack-Signature"];$x_slack_timestamp = $headers["X-Slack-Request-Timestamp"];$version = "v0";$user_id = $_POST["user_id"];$trigger_id = $_POST["trigger_id"];// Check if the timestamp from Slack and the actual time differ in more than 300s (5min). If so, discard this messageif (abs($x_slack_timestamp - time()) > 300) {    header("HTTP/1.1 400 Bad Request", true, 400);    $err = ":warning: Old request. Discarding";    die($err);}/* For computing the signature, I need the following:  1. $version  2. $x_slack_timestamp  3. $raw_body * All of them appended to each other with a colon (:) */$signature_base_string = $version . ":" . $x_slack_timestamp . ":" . $raw_body;$hash_signature = "v0=" . hash_hmac('sha256', $signature_base_string, $slack_signing_secret);if (!hash_equals($x_slack_signature, $hash_signature)) {    header("HTTP/1.1 400 Bad Request", true, 400);    $err = ":warning: Request does not come from Slack!";    die($err);}// Define useful variables as well as some info which we might need later// At the moment there's no swaps allowed, so I will halt the program here by using a die() instruction giving the usual reason:// die("No swaps allowed until further notice :mask:");$command = "Request";$text = ucfirst(strtolower($_POST["text"]));// Error checking, pretty much going to think of all possible scenarios that could go wrong and handle errors, then run the script afterwards// Initialize the message variable as well as an error one so the append will work$msg = '';$err = '';// Connect to the database$conn = mysqli_connect($servername, $username, $password, $dbname);if (mysqli_error($conn)) {    die("Connection failed: " . mysqli_error($conn) . ":x::earth_africa:");}/* Before we go any further, we should check to see if they are based in DUB or not                   * * If they are not, then stop the swap request                                                        */$sql_base = "SELECT Base FROM Crew WHERE UserID = ?";$stmt_base = mysqli_prepare($conn, $sql_base);mysqli_stmt_bind_param($stmt_base, "s", $user_id);mysqli_stmt_execute($stmt_base);$result_base = mysqli_stmt_get_result($stmt_base);while ($row = mysqli_fetch_assoc($result_base)) {    if ($row["Base"] != 'DUB') { // Check if they're based in DUB        die("You are not based in DUB at the moment. Right now, you're based in " . $row["Base"]);    }}/* Because Ryanair only allows swaps between duties and days off, there's no need to create further code right now.  * However, I already coded the program and it would be a waste to throw all that code away; instead I'll leave it commented * in case they ever change their mind *//* switch ($text) {  default:  case "O":  case "Off":  $sql = "SELECT Rank FROM Crew WHERE UserID = ? ";  $stmt = mysqli_prepare($conn, $sql);  mysqli_stmt_bind_param($stmt, "s", $user_id);  mysqli_stmt_execute($stmt);  $result_text = mysqli_stmt_get_result($stmt);  if (mysqli_stmt_affected_rows($stmt) > 0) {  while ($row = mysqli_fetch_row($result_text)) {  $rank = $row[0];  }  } else {  die("I'm sorry. An error has ocurred. However, this error is because you're not registered in the database. Send a DM to <@U010PDT5UM7> with your name, rank and crewcode and it will be sorted promptly");  }  mysqli_stmt_close($stmt);  mysqli_close($conn);  switch ($rank) {  case "JU (NEW)":  case "JU":  include "RequestSwaps/JU_Off.php";  break;  case "JU (AH)":  case "JU (PU)":  include "RequestSwaps/JU (PU)_Off.php";  break;  case "PU (TC)":  case "PU":  case "PU (DS)":  case "PU (BS)":  case "PU (LC)":  case "PU (TH. INS)":  case "PU (INS)":  case "PU (SEP)":  include "RequestSwaps/PU_Off.php";  break;  }  break;  case "S":  case "Shorter":  $sql = "SELECT Rank FROM Crew WHERE UserID = ? ";  $stmt = mysqli_prepare($conn, $sql);  mysqli_stmt_bind_param($stmt, "s", $user_id);  mysqli_stmt_execute($stmt);  $result_text = mysqli_stmt_get_result($stmt);  if (mysqli_stmt_affected_rows($stmt) > 0) {  while ($row = mysqli_fetch_row($result_text)) {  $rank = $row[0];  }  } else {  die("I'm sorry. An error has ocurred. However, this error is because you're not registered in the database. Send a DM to <@U010PDT5UM7> with your name, rank and crewcode and it will be sorted promptly");  }  mysqli_stmt_close($stmt);  mysqli_close($conn);  switch ($rank) {  case "JU (NEW)":  case "JU":  include "RequestSwaps/JU_Shorter.php";  break;  case "JU (AH)":  case "JU (PU)":  include "RequestSwaps/JU (PU)_Shorter.php";  break;  case "PU (TC)":  case "PU":  case "PU (DS)":  case "PU (BS)":  case "PU (LC)":  case "PU (INS)":  case "PU (SEP)":  include "RequestSwaps/PU_Shorter.php";  break;  }  break;  case "F":  case "Flight":  $sql = "SELECT Rank FROM Crew WHERE UserID = ? ";  $stmt = mysqli_prepare($conn, $sql);  mysqli_stmt_bind_param($stmt, "s", $user_id);  mysqli_stmt_execute($stmt);  $result_text = mysqli_stmt_get_result($stmt);  if (mysqli_stmt_affected_rows($stmt) > 0) {  while ($row = mysqli_fetch_row($result_text)) {  $rank = $row[0];  }  } else {  die("I'm sorry. An error has ocurred. However, this error is because you're not registered in the database. Send a DM to <@U010PDT5UM7> with your name, rank and crewcode and it will be sorted promptly");  }  mysqli_stmt_close($stmt);  mysqli_close($conn);  switch ($rank) {  case "JU (NEW)":  case "JU":  include "RequestSwaps/JU_Flight.php";  break;  case "JU (AH)":  case "JU (PU)":  include "RequestSwaps/JU (PU)_Flight.php";  break;  case "PU (TC)":  case "PU":  case "PU (DS)":  case "PU (BS)":  case "PU (LC)":  // case "PU (TINS)":  case "PU (INS)":  case "PU (SEP)":  include "RequestSwaps/PU_Flight.php";  break;  }  break;  } */$sql = "SELECT Rank FROM Crew WHERE UserID = ? ";$stmt = mysqli_prepare($conn, $sql);mysqli_stmt_bind_param($stmt, "s", $user_id);mysqli_stmt_execute($stmt);$result_text = mysqli_stmt_get_result($stmt);if (mysqli_stmt_affected_rows($stmt) > 0) {    while ($row = mysqli_fetch_row($result_text)) {        $rank = $row[0];    }} else {    die("I'm sorry. An error has ocurred. However, this error is because you're not registered in the database. Send a DM to <@U010PDT5UM7> with your name, rank and crewcode and it will be sorted promptly");}mysqli_stmt_close($stmt);mysqli_close($conn);switch ($rank) {    case "JU (NEW)":    case "JU":        include "RequestSwaps/JU_Off.php";        break;    case "JU (AH)":    case "JU (PU)":        include "RequestSwaps/JU (PU)_Off.php";        break;    case "PU (TC)":    case "PU":    case "PU (DS)":    case "PU (BS)":    case "PU (LC)":    case "PU (TH. INS)":    case "PU (INS)":    case "PU (SEP)":        include "RequestSwaps/PU_Off.php";        break;}$slack_call = curl_init($slack_open_dialog);curl_setopt($slack_call, CURLOPT_CUSTOMREQUEST, "POST");curl_setopt($slack_call, CURLOPT_POSTFIELDS, $json_string);curl_setopt($slack_call, CURLOPT_CRLF, true);curl_setopt($slack_call, CURLOPT_RETURNTRANSFER, true);curl_setopt($slack_call, CURLOPT_HTTPHEADER, [    "Content-Type: application/json",    "Authorization: Bearer " . $token,    "Content-Length: " . strlen($json_string)]);$result = curl_exec($slack_call);curl_close($slack_call);/* If the user did provide the arguments in the message, divide them into the different variables we'll need *   $args = explode(" ", $text, 3);  $fecha = $args[0];  $duty = strtoupper($args[1]); // Turn everything into uppercase  $earlieslates = ucfirst(strtolower($args[2])); // Turn everything lowercase then uppercase the first letter  // Now we're gonna check whether the UserID is someone based in DUB.  $sql = "SELECT Crewcode, Base, Rank, UserID FROM Crew WHERE UserID = ?";  $stmt_base = mysqli_prepare($conn, $sql);  mysqli_stmt_bind_param($stmt_base, "s", $user_id);  mysqli_stmt_execute($stmt_base);  $result_base = mysqli_stmt_get_result($stmt_base);  while ($row = mysqli_fetch_assoc($result_base)) {  if ($row["Base"] != 'DUB') { // Check if they're based in DUB  $err .= "You are not based in DUB at the moment. Right now, you're based in " . $row["Base"];  }  $crewcode = $row["Crewcode"]; // Store the crewcode for later  $rank = $row["Rank"]; // Recover the rank for later usage  }  // We have to divide the argument "date" into day, month and year. Prior to dividing the date, check if it follows the format I've asked, which is the numbers separated by a dash (-)  $pattern = "/[^\d-]+/";  if (preg_match($pattern, $fecha)) {  $err .= "\nPlease follow the correct format. It is dd-mm-yy. Notice the dashes between the numbers";  goto SkipDate;  }  // Now we will divide them into Day, Month and Year.  $fechap = explode("-", $fecha, 3);  $dd = $fechap[0];  $mm = $fechap[1];  $yy = $fechap[2];  // We're now checking if any of the variables $mm or $yy are empty  if (empty($mm) OR empty($yy)) {  // If you're missing the month or the year (I could make year optional, to be honest, and then check for it's value; if it was empty, then assign this year's value)"  $err .= "\nNeed to input a full date (dd-mm-yy)";  goto SkipDate;  }  // This will check that the date exists  if (!checkdate($mm, $dd, $yy)) { // If the date is invalid (i.e. 29-02-21)  $err .= "\nThe date you're trying to choose doesn't exist. Please choose an appropriate one :calendar:";  goto SkipDate;  }  // Define the timeframe for the swap. If it's less than 12 days but more than 6, it will not be processed; however, it will advise you to contact the Base Supervisor / Crew Control.  // These are the times in Epoch (seconds since 01Jan70)  $rosterlimitepoch = mktime(12, 0, 0, date("m"), date("d") + 30, date("y"));  $swaprequestepoch = mktime(12, 0, 0, $mm, $dd, $yy);  $swapnotedepoch = mktime(12, 0, 0, date("m"), date("d") + 12, date("y"));  $swaplimitbsepoch = mktime(12, 0, 0, date("m"), date("d") + 6, date("y"));  $todayepoch = mktime(12, 0, 0, date("m"), date("d"), date("y"));  // Compare to the date the user provided  switch (true) {  case ($rosterlimitepoch < $swaprequestepoch): // If the date is > +30 days  die("It is too soon for the day you requested. Please try again at a later time");  break;  case ($swaprequestepoch >= $swapnotedepoch): // If the date is +12 days  break;  case (($swaprequestepoch < $swapnotedepoch) && ($swaprequestepoch >= $swaplimitbsepoch)): // If the date is between 6 and 12 days from today  $err .= "\nIt might be too late for a swap. Please contact your Base Supervisor / Crew Control";  break;  case (($swaprequestepoch < $swaplimitbsepoch) && ($swaprequestepoch > $todayepoch)): // If the date is less than 6 days from today  $err .= "\nIt is too late to ask for a swap";  break;  default: // Any other case scenario, which is a date being in the past  $err .= "\nWhy do you put a date in the past?";  break;  }  SkipDate:  if (!array_key_exists(1, $args)) { // Check if a duty was introduced  $err .= "\nWhat are you doing again? :airplane:";  goto SkipDuty;  }  $dutysplits = explode("/", $duty, 3); // Separate the airports into their 3 letter codes, using the slashes (/) as a delimiter  foreach ($dutysplits as $airportcheck) {  $airportcheck = strtoupper($airportcheck); // Turn them into uppercase letters  switch ($airportcheck) {  case "UNKNOWN": // You don't know the duty yet. In this case you'll still be allowed to process the swap, but if the date shows in the roster and the request is not updated, it will be deleted.  echo "Your duty is unknown for the moment. Please remember to update this as soon as possible. Otherwise, your request will be deleted.";  goto SkipEarliesLates;  case "HSBY": // It's a hsby, either earlies or lates.  case "AD": //It's an Airport Duty  goto SkipDuty;  }  $sqlinsert = "INSERT INTO Airport_Check VALUES (?)";  $stmt = mysqli_prepare($conn, $sqlinsert);  mysqli_stmt_bind_param($stmt, "s", $airportcheck);  mysqli_stmt_execute($stmt);  mysqli_stmt_close($stmt);  }  unset($dutysplits, $airportcheck); // Unset the references for the next person who runs the script  // All values have been introduced into the temporary table  $sqlcompare = "SELECT Airport_Check.AirportCode AS AirportCode, CASE WHEN Airports.AirportCode IS NULL THEN 'Not valid' ELSE 'Valid' END AS Valid FROM Airport_Check LEFT JOIN Airports ON Airport_Check.AirportCode = Airports.AirportCode";  $result = mysqli_query($conn, $sqlcompare); // Run the comparison  while ($row = mysqli_fetch_assoc($result)) {  if ($row["Valid"] != 'Valid') {  $err .= "\n" . $row["AirportCode"] . " is an invalid airport :warning:"; // Display an error if the airport introduced isn't valid  }  }  $sqldel = "DELETE FROM Airport_Check"; // Delete the requests for checking whether the airports were valid or not  mysqli_query($conn, $sqldel);  SkipDuty:  if (!array_key_exists(2, $args)) { // Check if a shift was introduced  $err .= "\nIs it earlies or lates?";  goto SkipEarliesLates;  }  switch ($earlieslates) { // See what the person chose, either be Earlies (E), Lates (L) or anything else (which it isn't a valid input)  case "E":  case "Earlies":  $earlieslates = "Earlies";  break;  case "L":  case "Lates":  $earlieslates = "Lates";  break;  default;  $err .= "\n" . $earlieslates . " isn't a valid answer to this question";  }  SkipEarliesLates:  if (!empty($err)) { // If there's any error message, display it and end the program without adding any request whatsoever  die($err);  }  // Once everything has been double checked, we will add the request to the Swaps table  $fecha = $yy . "-" . $mm . "-" . $dd;  $sqlinsert = "INSERT INTO Swaps VALUES (?, ?, ?, '', 'Request', ?, ?, ?)";  $stmt = mysqli_prepare($conn, $sqlinsert);  mysqli_stmt_bind_param($stmt, "ssssss", $crewcode, $fecha, $duty, $earlieslates, $rank, $user_id);  mysqli_stmt_execute($stmt);  if (mysqli_error($conn) != "") { // Check for an error message from the last query  echo "\nYour request couldn't be processed at this time :disappointed:"; // If it fails  echo "\n" . mysqli_error($conn);  } else {  echo "\nYour request has been created successfully! :simple_smile:"; // If it's successful  }  mysqli_stmt_close($stmt);  mysqli_close($conn); // Close the connection prior to ending the program */?>